{
    "sourceFile": "frontend/app/login/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1740968248146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740975853372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     try {\r\n       // Simulate API delay\r\n       await new Promise((resolve) => setTimeout(resolve, 1000))\r\n \r\n-      const storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\")\r\n+      const storedUsers = JSON.parse(localStorage.getItem(\"users\") ?? \"[]\")\r\n       const user = storedUsers.find((u: any) => u.email === email)\r\n \r\n       if (user && user.password === password) {\r\n         // Save session\r\n@@ -129,5 +129,4 @@\n       </Card>\r\n     </div>\r\n   )\r\n }\r\n-\r\n"
                },
                {
                    "date": 1741062845272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,29 @@\n \"use client\"\r\n \r\n import type React from \"react\"\r\n-import { useState } from \"react\"\r\n+import { useState, useEffect } from \"react\"\r\n import { useRouter } from \"next/navigation\"\r\n import { Button } from \"@/components/ui/button\"\r\n import { Input } from \"@/components/ui/input\"\r\n import { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\"\r\n import { Rocket } from \"lucide-react\"\r\n import { useRandomStars } from \"@/hooks/use-random-stars\"\r\n import Cookies from \"js-cookie\"\r\n import Link from \"next/link\"\r\n+import { initializeDefaultUsers } from \"@/lib/utils/auth\"\r\n \r\n export default function LoginPage() {\r\n   const router = useRouter()\r\n   const [error, setError] = useState(\"\")\r\n   const [loading, setLoading] = useState(false)\r\n   const stars = useRandomStars(50)\r\n \r\n+  // Inicializar usuarios predeterminados si no existen\r\n+  useEffect(() => {\r\n+    initializeDefaultUsers()\r\n+  }, [])\r\n+\r\n   const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault()\r\n     setError(\"\")\r\n     setLoading(true)\r\n@@ -29,23 +35,30 @@\n     try {\r\n       // Simulate API delay\r\n       await new Promise((resolve) => setTimeout(resolve, 1000))\r\n \r\n-      const storedUsers = JSON.parse(localStorage.getItem(\"users\") ?? \"[]\")\r\n+      const storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\")\r\n       const user = storedUsers.find((u: any) => u.email === email)\r\n \r\n       if (user && user.password === password) {\r\n         // Save session\r\n         Cookies.set(\"auth\", \"true\", { expires: 7 })\r\n-        localStorage.setItem(\r\n-          \"currentUser\",\r\n-          JSON.stringify({\r\n-            name: user.fullName,\r\n-            email: user.email,\r\n-            pin: user.pin,\r\n-          }),\r\n-        )\r\n-        router.push(\"/dashboard\")\r\n+        localStorage.setItem(\"currentUser\", JSON.stringify(user))\r\n+\r\n+        // Redirigir seg√∫n rol\r\n+        switch (user.role) {\r\n+          case \"admin\":\r\n+            router.push(\"/dashboard/admin\")\r\n+            break\r\n+          case \"mentor\":\r\n+            router.push(\"/dashboard/mentor\")\r\n+            break\r\n+          case \"company\":\r\n+            router.push(\"/dashboard/company\")\r\n+            break\r\n+          default:\r\n+            router.push(\"/dashboard/junior\")\r\n+        }\r\n       } else {\r\n         setError(\"Invalid credentials\")\r\n       }\r\n     } catch (err) {\r\n@@ -129,4 +142,5 @@\n       </Card>\r\n     </div>\r\n   )\r\n }\r\n+\r\n"
                },
                {
                    "date": 1741063242727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,20 @@\n import { useRandomStars } from \"@/hooks/use-random-stars\"\r\n import Cookies from \"js-cookie\"\r\n import Link from \"next/link\"\r\n import { initializeDefaultUsers } from \"@/lib/utils/auth\"\r\n+import {\r\n+  cardTitleText,\r\n+  cardDescriptionText,\r\n+  emailPlaceholder,\r\n+  passwordPlaceholder,\r\n+  signInButtonText,\r\n+  signingInText,\r\n+  createAccountText,\r\n+  createAccountLinkText,\r\n+  invalidCredentialsText,\r\n+  errorSigningInText,\r\n+} from \"./data\"\r\n \r\n export default function LoginPage() {\r\n   const router = useRouter()\r\n   const [error, setError] = useState(\"\")\r\n@@ -58,12 +70,12 @@\n           default:\r\n             router.push(\"/dashboard/junior\")\r\n         }\r\n       } else {\r\n-        setError(\"Invalid credentials\")\r\n+        setError(invalidCredentialsText)\r\n       }\r\n     } catch (err) {\r\n-      setError(\"Error signing in\")\r\n+      setError(errorSigningInText)\r\n     } finally {\r\n       setLoading(false)\r\n     }\r\n   }\r\n@@ -97,27 +109,27 @@\n         <CardHeader className=\"space-y-4\">\r\n           <div className=\"mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-primary/20\">\r\n             <Rocket className=\"h-6 w-6 text-primary\" />\r\n           </div>\r\n-          <CardTitle className=\"text-center text-2xl font-bold\">Welcome Back</CardTitle>\r\n-          <CardDescription className=\"text-center\">Sign in to your account</CardDescription>\r\n+          <CardTitle className=\"text-center text-2xl font-bold\">{cardTitleText}</CardTitle>\r\n+          <CardDescription className=\"text-center\">{cardDescriptionText}</CardDescription>\r\n         </CardHeader>\r\n         <CardContent>\r\n           <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n             <div className=\"space-y-2\">\r\n               <Input\r\n                 type=\"email\"\r\n                 name=\"email\"\r\n-                placeholder=\"Email\"\r\n+                placeholder={emailPlaceholder}\r\n                 required\r\n                 className=\"border-primary/20 bg-primary/10 placeholder:text-muted-foreground\"\r\n               />\r\n             </div>\r\n             <div className=\"space-y-2\">\r\n               <Input\r\n                 type=\"password\"\r\n                 name=\"password\"\r\n-                placeholder=\"Password\"\r\n+                placeholder={passwordPlaceholder}\r\n                 required\r\n                 className=\"border-primary/20 bg-primary/10 placeholder:text-muted-foreground\"\r\n               />\r\n             </div>\r\n@@ -126,21 +138,20 @@\n               type=\"submit\"\r\n               className=\"w-full bg-gradient-to-r from-primary to-accent text-white transition-all hover:opacity-90\"\r\n               disabled={loading}\r\n             >\r\n-              {loading ? \"Signing in...\" : \"Sign in\"}\r\n+              {loading ? signingInText : signInButtonText}\r\n             </Button>\r\n           </form>\r\n         </CardContent>\r\n         <CardFooter className=\"flex justify-center\">\r\n           <p className=\"text-sm text-muted-foreground\">\r\n-            Don&apos;t have an account?{\" \"}\r\n+            {createAccountText}{\" \"}\r\n             <Link href=\"/register\" className=\"text-primary hover:underline\">\r\n-              Create account\r\n+              {createAccountLinkText}\r\n             </Link>\r\n           </p>\r\n         </CardFooter>\r\n       </Card>\r\n     </div>\r\n   )\r\n }\r\n-\r\n"
                },
                {
                    "date": 1741063253420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     try {\r\n       // Simulate API delay\r\n       await new Promise((resolve) => setTimeout(resolve, 1000))\r\n \r\n-      const storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\")\r\n+      const storedUsers = JSON.parse(localStorage.getItem(\"users\") ?? \"[]\")\r\n       const user = storedUsers.find((u: any) => u.email === email)\r\n \r\n       if (user && user.password === password) {\r\n         // Save session\r\n"
                }
            ],
            "date": 1740968248146,
            "name": "Commit-0",
            "content": "\"use client\"\r\n\r\nimport type React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useRouter } from \"next/navigation\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\"\r\nimport { Rocket } from \"lucide-react\"\r\nimport { useRandomStars } from \"@/hooks/use-random-stars\"\r\nimport Cookies from \"js-cookie\"\r\nimport Link from \"next/link\"\r\n\r\nexport default function LoginPage() {\r\n  const router = useRouter()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const stars = useRandomStars(50)\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    setError(\"\")\r\n    setLoading(true)\r\n\r\n    const formData = new FormData(e.currentTarget)\r\n    const email = formData.get(\"email\") as string\r\n    const password = formData.get(\"password\") as string\r\n\r\n    try {\r\n      // Simulate API delay\r\n      await new Promise((resolve) => setTimeout(resolve, 1000))\r\n\r\n      const storedUsers = JSON.parse(localStorage.getItem(\"users\") || \"[]\")\r\n      const user = storedUsers.find((u: any) => u.email === email)\r\n\r\n      if (user && user.password === password) {\r\n        // Save session\r\n        Cookies.set(\"auth\", \"true\", { expires: 7 })\r\n        localStorage.setItem(\r\n          \"currentUser\",\r\n          JSON.stringify({\r\n            name: user.fullName,\r\n            email: user.email,\r\n            pin: user.pin,\r\n          }),\r\n        )\r\n        router.push(\"/dashboard\")\r\n      } else {\r\n        setError(\"Invalid credentials\")\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error signing in\")\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen items-center justify-center bg-background p-4\">\r\n      {/* Stars Background */}\r\n      <div className=\"absolute inset-0 overflow-hidden\">\r\n        {stars.map((star) => (\r\n          <div\r\n            key={star.id}\r\n            className={`absolute inline-flex animate-pulse ${star.color}`}\r\n            style={{\r\n              left: `${star.x}%`,\r\n              top: `${star.y}%`,\r\n              width: `${star.size}px`,\r\n              height: `${star.size}px`,\r\n              opacity: star.opacity,\r\n              animation: `pulse ${star.duration}s infinite`,\r\n            }}\r\n          >\r\n            <span className=\"absolute inline-flex h-full w-full animate-ping rounded-full bg-primary opacity-75\" />\r\n            <span className=\"relative inline-flex h-full w-full rounded-full bg-primary\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"absolute inset-0 bg-gradient-to-br from-primary/10 via-background to-background\" />\r\n\r\n      <Card className=\"relative w-full max-w-md border-primary/20 bg-background/60 backdrop-blur-xl\">\r\n        <CardHeader className=\"space-y-4\">\r\n          <div className=\"mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-primary/20\">\r\n            <Rocket className=\"h-6 w-6 text-primary\" />\r\n          </div>\r\n          <CardTitle className=\"text-center text-2xl font-bold\">Welcome Back</CardTitle>\r\n          <CardDescription className=\"text-center\">Sign in to your account</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div className=\"space-y-2\">\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                className=\"border-primary/20 bg-primary/10 placeholder:text-muted-foreground\"\r\n              />\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                className=\"border-primary/20 bg-primary/10 placeholder:text-muted-foreground\"\r\n              />\r\n            </div>\r\n            {error && <p className=\"text-sm text-destructive\">{error}</p>}\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"w-full bg-gradient-to-r from-primary to-accent text-white transition-all hover:opacity-90\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? \"Signing in...\" : \"Sign in\"}\r\n            </Button>\r\n          </form>\r\n        </CardContent>\r\n        <CardFooter className=\"flex justify-center\">\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Don&apos;t have an account?{\" \"}\r\n            <Link href=\"/register\" className=\"text-primary hover:underline\">\r\n              Create account\r\n            </Link>\r\n          </p>\r\n        </CardFooter>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\n"
        }
    ]
}