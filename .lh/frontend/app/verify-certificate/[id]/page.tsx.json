{
    "sourceFile": "frontend/app/verify-certificate/[id]/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1741328293130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741328335016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n           <h1 className=\"text-3xl font-bold text-white mb-2\">Verificación de Certificado</h1>\n           <p className=\"text-muted-foreground\">Verifica la autenticidad de un certificado emitido por StartPerks</p>\n         </div>\n \n-        let content;\n+        let content: JSX.Element;\n \n         if (isLoading) {\n           content = (\n             <div className=\"flex flex-col items-center justify-center py-12\">\n"
                },
                {
                    "date": 1741328350094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n           <h1 className=\"text-3xl font-bold text-white mb-2\">Verificación de Certificado</h1>\n           <p className=\"text-muted-foreground\">Verifica la autenticidad de un certificado emitido por StartPerks</p>\n         </div>\n \n-        let content: JSX.Element;\n+        \n \n         if (isLoading) {\n           content = (\n             <div className=\"flex flex-col items-center justify-center py-12\">\n"
                },
                {
                    "date": 1741328357557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n   const [isLoading, setIsLoading] = useState(true)\n   const [isValid, setIsValid] = useState(false)\n   const [certificateData, setCertificateData] = useState<any>(null)\n   const [error, setError] = useState(\"\")\n+let content: JSX.Element;\n \n   useEffect(() => {\n     const fetchCertificateData = async () => {\n       try {\n@@ -61,10 +62,10 @@\n           <h1 className=\"text-3xl font-bold text-white mb-2\">Verificación de Certificado</h1>\n           <p className=\"text-muted-foreground\">Verifica la autenticidad de un certificado emitido por StartPerks</p>\n         </div>\n \n-        \n \n+\n         if (isLoading) {\n           content = (\n             <div className=\"flex flex-col items-center justify-center py-12\">\n               <Loader2 className=\"h-12 w-12 text-primary animate-spin mb-4\" />\n"
                },
                {
                    "date": 1741328364530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   const [isLoading, setIsLoading] = useState(true)\n   const [isValid, setIsValid] = useState(false)\n   const [certificateData, setCertificateData] = useState<any>(null)\n   const [error, setError] = useState(\"\")\n-let content: JSX.Element;\n+let content\n \n   useEffect(() => {\n     const fetchCertificateData = async () => {\n       try {\n"
                },
                {
                    "date": 1741328378503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   const [isLoading, setIsLoading] = useState(true)\n   const [isValid, setIsValid] = useState(false)\n   const [certificateData, setCertificateData] = useState<any>(null)\n   const [error, setError] = useState(\"\")\n-let content\n+  let content\n \n   useEffect(() => {\n     const fetchCertificateData = async () => {\n       try {\n@@ -70,9 +70,9 @@\n             <div className=\"flex flex-col items-center justify-center py-12\">\n               <Loader2 className=\"h-12 w-12 text-primary animate-spin mb-4\" />\n               <p className=\"text-muted-foreground\">Verificando certificado...</p>\n             </div>\n-          );\n+          )\n         } else if (isValid && certificateData) {\n           content = (\n             <div className=\"space-y-8\">\n               <Card className=\"border-primary/20 bg-background/60 backdrop-blur-xl\">\n"
                },
                {
                    "date": 1741328388141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n                   <DownloadOptions certificateId={certificateId} />\n                 </CardFooter>\n               </Card>\n             </div>\n-          );\n+          )\n         } else {\n           content = (\n             <Card className=\"border-destructive/20 bg-background/60 backdrop-blur-xl\">\n               <CardHeader className=\"flex flex-row items-center gap-4\">\n"
                },
                {
                    "date": 1741328395222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,11 +131,10 @@\n                   Ver certificados disponibles\n                 </Button>\n               </CardFooter>\n             </Card>\n-          );\n+          )\n         }\n-\n         return content;\n       </main>\n     </div>\n   )\n"
                },
                {
                    "date": 1741328420916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n   const [isLoading, setIsLoading] = useState(true)\n   const [isValid, setIsValid] = useState(false)\n   const [certificateData, setCertificateData] = useState<any>(null)\n   const [error, setError] = useState(\"\")\n-  let content\n \n   useEffect(() => {\n     const fetchCertificateData = async () => {\n       try {\n@@ -65,18 +64,16 @@\n \n \n \n         if (isLoading) {\n-          content = (\n-            <div className=\"flex flex-col items-center justify-center py-12\">\n+        {isLoading ? (\n               <Loader2 className=\"h-12 w-12 text-primary animate-spin mb-4\" />\n               <p className=\"text-muted-foreground\">Verificando certificado...</p>\n             </div>\n           )\n         } else if (isValid && certificateData) {\n           content = (\n-            <div className=\"space-y-8\">\n-              <Card className=\"border-primary/20 bg-background/60 backdrop-blur-xl\">\n+        ) : isValid && certificateData ? (\n                 <CardHeader className=\"flex flex-row items-center gap-4\">\n                   <CheckCircle className=\"h-8 w-8 text-green-500\" />\n                   <div>\n                     <CardTitle>Certificado Válido</CardTitle>\n@@ -107,10 +104,9 @@\n           )\n         } else {\n           content = (\n             <Card className=\"border-destructive/20 bg-background/60 backdrop-blur-xl\">\n-              <CardHeader className=\"flex flex-row items-center gap-4\">\n-                <XCircle className=\"h-8 w-8 text-destructive\" />\n+        ) : (\n                 <div>\n                   <CardTitle>Certificado No Válido</CardTitle>\n                   <CardDescription>{error}</CardDescription>\n                 </div>\n@@ -136,6 +132,5 @@\n         }\n         return content;\n       </main>\n     </div>\n-  )\n-}\n+        )}\n"
                },
                {
                    "date": 1741328459232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n   const [isLoading, setIsLoading] = useState(true)\n   const [isValid, setIsValid] = useState(false)\n   const [certificateData, setCertificateData] = useState<any>(null)\n   const [error, setError] = useState(\"\")\n+  let content\n \n   useEffect(() => {\n     const fetchCertificateData = async () => {\n       try {\n@@ -64,16 +65,18 @@\n \n \n \n         if (isLoading) {\n-        {isLoading ? (\n+          content = (\n+            <div className=\"flex flex-col items-center justify-center py-12\">\n               <Loader2 className=\"h-12 w-12 text-primary animate-spin mb-4\" />\n               <p className=\"text-muted-foreground\">Verificando certificado...</p>\n             </div>\n           )\n         } else if (isValid && certificateData) {\n           content = (\n-        ) : isValid && certificateData ? (\n+            <div className=\"space-y-8\">\n+              <Card className=\"border-primary/20 bg-background/60 backdrop-blur-xl\">\n                 <CardHeader className=\"flex flex-row items-center gap-4\">\n                   <CheckCircle className=\"h-8 w-8 text-green-500\" />\n                   <div>\n                     <CardTitle>Certificado Válido</CardTitle>\n@@ -100,13 +103,14 @@\n                   <DownloadOptions certificateId={certificateId} />\n                 </CardFooter>\n               </Card>\n             </div>\n-          )\n+          );\n         } else {\n           content = (\n             <Card className=\"border-destructive/20 bg-background/60 backdrop-blur-xl\">\n-        ) : (\n+              <CardHeader className=\"flex flex-row items-center gap-4\">\n+                <XCircle className=\"h-8 w-8 text-destructive\" />\n                 <div>\n                   <CardTitle>Certificado No Válido</CardTitle>\n                   <CardDescription>{error}</CardDescription>\n                 </div>\n@@ -127,10 +131,12 @@\n                   Ver certificados disponibles\n                 </Button>\n               </CardFooter>\n             </Card>\n-          )\n+          );\n         }\n+\n         return content;\n       </main>\n     </div>\n-        )}\n+  )\n+}\n"
                },
                {
                    "date": 1741328479292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   const [isLoading, setIsLoading] = useState(true)\n   const [isValid, setIsValid] = useState(false)\n   const [certificateData, setCertificateData] = useState<any>(null)\n   const [error, setError] = useState(\"\")\n-  let content\n+let content\n \n   useEffect(() => {\n     const fetchCertificateData = async () => {\n       try {\n@@ -70,9 +70,9 @@\n             <div className=\"flex flex-col items-center justify-center py-12\">\n               <Loader2 className=\"h-12 w-12 text-primary animate-spin mb-4\" />\n               <p className=\"text-muted-foreground\">Verificando certificado...</p>\n             </div>\n-          )\n+          );\n         } else if (isValid && certificateData) {\n           content = (\n             <div className=\"space-y-8\">\n               <Card className=\"border-primary/20 bg-background/60 backdrop-blur-xl\">\n"
                },
                {
                    "date": 1741328489477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n   const [isLoading, setIsLoading] = useState(true)\n   const [isValid, setIsValid] = useState(false)\n   const [certificateData, setCertificateData] = useState<any>(null)\n   const [error, setError] = useState(\"\")\n-let content\n \n   useEffect(() => {\n     const fetchCertificateData = async () => {\n       try {\n@@ -62,81 +61,71 @@\n           <h1 className=\"text-3xl font-bold text-white mb-2\">Verificación de Certificado</h1>\n           <p className=\"text-muted-foreground\">Verifica la autenticidad de un certificado emitido por StartPerks</p>\n         </div>\n \n-\n-\n-        if (isLoading) {\n-          content = (\n-            <div className=\"flex flex-col items-center justify-center py-12\">\n-              <Loader2 className=\"h-12 w-12 text-primary animate-spin mb-4\" />\n-              <p className=\"text-muted-foreground\">Verificando certificado...</p>\n-            </div>\n-          );\n-        } else if (isValid && certificateData) {\n-          content = (\n-            <div className=\"space-y-8\">\n-              <Card className=\"border-primary/20 bg-background/60 backdrop-blur-xl\">\n-                <CardHeader className=\"flex flex-row items-center gap-4\">\n-                  <CheckCircle className=\"h-8 w-8 text-green-500\" />\n-                  <div>\n-                    <CardTitle>Certificado Válido</CardTitle>\n-                    <CardDescription>Este certificado ha sido emitido por StartPerks y es auténtico</CardDescription>\n-                  </div>\n-                </CardHeader>\n-                <CardContent>\n-                  <div className=\"mb-6 certificate-template\">\n-                    <CertificateTemplate\n-                      date={certificateData.date}\n-                      title={certificateData.title}\n-                      recipientName={certificateData.recipientName}\n-                      recipientRole={certificateData.recipientRole}\n-                      course={certificateData.course}\n-                      certifierName={certificateData.certifierName}\n-                      certifierRole={certificateData.certifierRole}\n-                      certifierImage={certificateData.certifierImage}\n-                      certificateId={certificateData.certificateId}\n-                    />\n-                  </div>\n-                </CardContent>\n-                <CardFooter className=\"flex flex-col sm:flex-row gap-4\">\n-                  <ShareCertificate certificateId={certificateId} />\n-                  <DownloadOptions certificateId={certificateId} />\n-                </CardFooter>\n-              </Card>\n-            </div>\n-          );\n-        } else {\n-          content = (\n-            <Card className=\"border-destructive/20 bg-background/60 backdrop-blur-xl\">\n+        {isLoading ? (\n+          <div className=\"flex flex-col items-center justify-center py-12\">\n+            <Loader2 className=\"h-12 w-12 text-primary animate-spin mb-4\" />\n+            <p className=\"text-muted-foreground\">Verificando certificado...</p>\n+          </div>\n+        ) : isValid && certificateData ? (\n+          <div className=\"space-y-8\">\n+            <Card className=\"border-primary/20 bg-background/60 backdrop-blur-xl\">\n               <CardHeader className=\"flex flex-row items-center gap-4\">\n-                <XCircle className=\"h-8 w-8 text-destructive\" />\n+                <CheckCircle className=\"h-8 w-8 text-green-500\" />\n                 <div>\n-                  <CardTitle>Certificado No Válido</CardTitle>\n-                  <CardDescription>{error}</CardDescription>\n+                  <CardTitle>Certificado Válido</CardTitle>\n+                  <CardDescription>Este certificado ha sido emitido por StartPerks y es auténtico</CardDescription>\n                 </div>\n               </CardHeader>\n               <CardContent>\n-                <p className=\"text-muted-foreground\">\n-                  El certificado con ID <span className=\"font-mono\">{certificateId}</span> no pudo ser verificado. Esto\n-                  puede deberse a que el certificado no existe, ha sido revocado o la información proporcionada es\n-                  incorrecta.\n-                </p>\n+                <div className=\"mb-6 certificate-template\">\n+                  <CertificateTemplate\n+                    date={certificateData.date}\n+                    title={certificateData.title}\n+                    recipientName={certificateData.recipientName}\n+                    recipientRole={certificateData.recipientRole}\n+                    course={certificateData.course}\n+                    certifierName={certificateData.certifierName}\n+                    certifierRole={certificateData.certifierRole}\n+                    certifierImage={certificateData.certifierImage}\n+                    certificateId={certificateData.certificateId}\n+                  />\n+                </div>\n               </CardContent>\n-              <CardFooter>\n-                <Button\n-                  variant=\"outline\"\n-                  className=\"btn-gradient-border\"\n-                  onClick={() => router.push(ROUTES.CERTIFICATES)}\n-                >\n-                  Ver certificados disponibles\n-                </Button>\n+              <CardFooter className=\"flex flex-col sm:flex-row gap-4\">\n+                <ShareCertificate certificateId={certificateId} />\n+                <DownloadOptions certificateId={certificateId} />\n               </CardFooter>\n             </Card>\n-          );\n-        }\n-\n-        return content;\n+          </div>\n+        ) : (\n+          <Card className=\"border-destructive/20 bg-background/60 backdrop-blur-xl\">\n+            <CardHeader className=\"flex flex-row items-center gap-4\">\n+              <XCircle className=\"h-8 w-8 text-destructive\" />\n+              <div>\n+                <CardTitle>Certificado No Válido</CardTitle>\n+                <CardDescription>{error}</CardDescription>\n+              </div>\n+            </CardHeader>\n+            <CardContent>\n+              <p className=\"text-muted-foreground\">\n+                El certificado con ID <span className=\"font-mono\">{certificateId}</span> no pudo ser verificado. Esto\n+                puede deberse a que el certificado no existe, ha sido revocado o la información proporcionada es\n+                incorrecta.\n+              </p>\n+            </CardContent>\n+            <CardFooter>\n+              <Button\n+                variant=\"outline\"\n+                className=\"btn-gradient-border\"\n+                onClick={() => router.push(ROUTES.CERTIFICATES)}\n+              >\n+                Ver certificados disponibles\n+              </Button>\n+            </CardFooter>\n+          </Card>\n+        )}\n       </main>\n     </div>\n   )\n }\n"
                }
            ],
            "date": 1741328293130,
            "name": "Commit-0",
            "content": "\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { useParams, useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { CertificateTemplate } from \"@/components/certificate/certificate-template\"\nimport { ShareCertificate } from \"@/components/certificate/share-certificate\"\nimport { DownloadOptions } from \"@/components/certificate/download-options\"\nimport { CheckCircle, XCircle, Loader2 } from \"lucide-react\"\nimport { verifyCertificate } from \"@/lib/certificate-service\"\nimport { ROUTES } from \"@/lib/constants/routes\"\nimport { StarsBackground } from \"@/components/ui/stars-background\"\n\nexport default function VerifyCertificatePage() {\n  const params = useParams()\n  const router = useRouter()\n  const certificateId = params.id as string\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [isValid, setIsValid] = useState(false)\n  const [certificateData, setCertificateData] = useState<any>(null)\n  const [error, setError] = useState(\"\")\n\n  useEffect(() => {\n    const fetchCertificateData = async () => {\n      try {\n        setIsLoading(true)\n        // In a real app, this would be an API call to verify the certificate\n        const result = await verifyCertificate(certificateId)\n\n        if (result.valid) {\n          setIsValid(true)\n          setCertificateData(result.data)\n        } else {\n          setIsValid(false)\n          setError(result.error || \"Certificado no válido o expirado\")\n        }\n      } catch (err) {\n        setIsValid(false)\n        setError(\"Error al verificar el certificado\")\n        console.error(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (certificateId) {\n      fetchCertificateData()\n    }\n  }, [certificateId])\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Stars Background */}\n      <StarsBackground />\n\n      {/* Main Content */}\n      <main className=\"container mx-auto pt-4 pb-16\">\n        <div className=\"mb-8 text-center\">\n          <h1 className=\"text-3xl font-bold text-white mb-2\">Verificación de Certificado</h1>\n          <p className=\"text-muted-foreground\">Verifica la autenticidad de un certificado emitido por StartPerks</p>\n        </div>\n\n        let content;\n\n        if (isLoading) {\n          content = (\n            <div className=\"flex flex-col items-center justify-center py-12\">\n              <Loader2 className=\"h-12 w-12 text-primary animate-spin mb-4\" />\n              <p className=\"text-muted-foreground\">Verificando certificado...</p>\n            </div>\n          );\n        } else if (isValid && certificateData) {\n          content = (\n            <div className=\"space-y-8\">\n              <Card className=\"border-primary/20 bg-background/60 backdrop-blur-xl\">\n                <CardHeader className=\"flex flex-row items-center gap-4\">\n                  <CheckCircle className=\"h-8 w-8 text-green-500\" />\n                  <div>\n                    <CardTitle>Certificado Válido</CardTitle>\n                    <CardDescription>Este certificado ha sido emitido por StartPerks y es auténtico</CardDescription>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"mb-6 certificate-template\">\n                    <CertificateTemplate\n                      date={certificateData.date}\n                      title={certificateData.title}\n                      recipientName={certificateData.recipientName}\n                      recipientRole={certificateData.recipientRole}\n                      course={certificateData.course}\n                      certifierName={certificateData.certifierName}\n                      certifierRole={certificateData.certifierRole}\n                      certifierImage={certificateData.certifierImage}\n                      certificateId={certificateData.certificateId}\n                    />\n                  </div>\n                </CardContent>\n                <CardFooter className=\"flex flex-col sm:flex-row gap-4\">\n                  <ShareCertificate certificateId={certificateId} />\n                  <DownloadOptions certificateId={certificateId} />\n                </CardFooter>\n              </Card>\n            </div>\n          );\n        } else {\n          content = (\n            <Card className=\"border-destructive/20 bg-background/60 backdrop-blur-xl\">\n              <CardHeader className=\"flex flex-row items-center gap-4\">\n                <XCircle className=\"h-8 w-8 text-destructive\" />\n                <div>\n                  <CardTitle>Certificado No Válido</CardTitle>\n                  <CardDescription>{error}</CardDescription>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-muted-foreground\">\n                  El certificado con ID <span className=\"font-mono\">{certificateId}</span> no pudo ser verificado. Esto\n                  puede deberse a que el certificado no existe, ha sido revocado o la información proporcionada es\n                  incorrecta.\n                </p>\n              </CardContent>\n              <CardFooter>\n                <Button\n                  variant=\"outline\"\n                  className=\"btn-gradient-border\"\n                  onClick={() => router.push(ROUTES.CERTIFICATES)}\n                >\n                  Ver certificados disponibles\n                </Button>\n              </CardFooter>\n            </Card>\n          );\n        }\n\n        return content;\n      </main>\n    </div>\n  )\n}\n"
        }
    ]
}