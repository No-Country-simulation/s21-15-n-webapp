{
    "sourceFile": "frontend/components/dashboard/navigation/dashboard-nav.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1741631459194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741631461829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import Link from \"next/link\"\n import { Home, User, Settings, LogOut, Award, BookOpen, Users, Building, X } from \"lucide-react\"\n import { cn } from \"@/lib/utils\"\n import { Button } from \"@/components/ui/button\"\n-import { AppLogo } from \"@/components/comm/ui/app-logo\"\n+import { AppLogo } from \"@/components/common/ui/app-logo\"\n import { useAuth } from \"@/hooks/use-auth\"\n import { ROUTES } from \"@/lib/constants/routes\"\n import { useState } from \"react\"\n import { Sidebar } from \"./sidebar\"\n"
                },
                {
                    "date": 1741631505436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { useAuth } from \"@/hooks/use-auth\"\n import { ROUTES } from \"@/config/constants/routes\"\n import { useState } from \"react\"\n import { Sidebar } from \"./sidebar\"\n-import { MobileNav } from \"@/mobile-nav\"\n+import { MobileNav } from \"@//mobile-nav\"\n import { TopBar } from \"./top-bar\"\n \n interface NavItemProps {\n   href: string\n"
                }
            ],
            "date": 1741631459194,
            "name": "Commit-0",
            "content": "\"use client\"\n\nimport type React from \"react\"\n\nimport { usePathname } from \"next/navigation\"\nimport Link from \"next/link\"\nimport { Home, User, Settings, LogOut, Award, BookOpen, Users, Building, X } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { AppLogo } from \"@/components/common/ui/app-logo\"\nimport { useAuth } from \"@/hooks/use-auth\"\nimport { ROUTES } from \"@/lib/constants/routes\"\nimport { useState } from \"react\"\nimport { Sidebar } from \"./sidebar\"\nimport { MobileNav } from \"./mobile-nav\"\nimport { TopBar } from \"./top-bar\"\n\ninterface NavItemProps {\n  href: string\n  icon: React.ReactNode\n  label: string\n  isActive: boolean\n}\n\ninterface DashboardNavProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\nfunction NavItem({ href, icon, label, isActive }: NavItemProps) {\n  return (\n    <Link\n      href={href}\n      className={cn(\n        \"flex items-center gap-3 rounded-lg px-3 py-2 text-sm transition-all\",\n        isActive\n          ? \"bg-primary/10 text-primary font-medium\"\n          : \"text-muted-foreground hover:bg-primary/5 hover:text-primary\",\n      )}\n    >\n      {icon}\n      {label}\n    </Link>\n  )\n}\n\nexport function DashboardNav({ isOpen, onClose }: DashboardNavProps) {\n  const pathname = usePathname()\n  const { logout, user } = useAuth()\n  const [showMobileMenu, setShowMobileMenu] = useState(false)\n\n  // Determinar el rol del usuario (esto es un ejemplo, ajusta según tu lógica)\n  const userRole = user?.role || \"junior\"\n\n  // Determinar qué enlaces mostrar según el rol\n  const getNavLinks = () => {\n    const links = [\n      {\n        href: ROUTES.DASHBOARD,\n        icon: <Home className=\"h-4 w-4\" />,\n        label: \"Inicio\",\n      },\n    ]\n\n    // Agregar enlaces específicos según el rol\n    if (userRole === \"junior\") {\n      links.push(\n        {\n          href: ROUTES.DASHBOARD_JUNIOR,\n          icon: <Award className=\"h-4 w-4\" />,\n          label: \"Mi Progreso\",\n        },\n        {\n          href: \"/dashboard/courses\",\n          icon: <BookOpen className=\"h-4 w-4\" />,\n          label: \"Mis Cursos\",\n        },\n      )\n    } else if (userRole === \"admin\") {\n      links.push({\n        href: ROUTES.DASHBOARD_ADMIN,\n        icon: <Settings className=\"h-4 w-4\" />,\n        label: \"Administración\",\n      })\n    } else if (userRole === \"mentor\") {\n      links.push({\n        href: ROUTES.DASHBOARD_MENTOR,\n        icon: <Users className=\"h-4 w-4\" />,\n        label: \"Mis Estudiantes\",\n      })\n    } else if (userRole === \"company\") {\n      links.push({\n        href: ROUTES.DASHBOARD_COMPANY,\n        icon: <Building className=\"h-4 w-4\" />,\n        label: \"Mi Empresa\",\n      })\n    }\n\n    // Enlaces comunes para todos los roles\n    links.push({\n      href: ROUTES.DASHBOARD_PROFILE,\n      icon: <User className=\"h-4 w-4\" />,\n      label: \"Mi Perfil\",\n    })\n\n    return links\n  }\n\n  const navLinks = getNavLinks()\n\n  return (\n    <>\n      {/* Overlay para móvil cuando el menú está abierto */}\n      {isOpen && <div className=\"fixed inset-0 z-40 bg-black/50 lg:hidden\" onClick={onClose} />}\n\n      {/* Barra de navegación lateral */}\n      <div\n        className={cn(\n          \"fixed top-0 left-0 z-50 h-full w-64 bg-background/95 backdrop-blur-sm border-r border-primary/10 transition-transform duration-300 ease-in-out\",\n          isOpen ? \"translate-x-0\" : \"-translate-x-full lg:translate-x-0\",\n        )}\n      >\n        <div className=\"flex h-16 items-center justify-between border-b border-primary/10 px-4\">\n          <AppLogo />\n          <Button variant=\"ghost\" size=\"icon\" className=\"lg:hidden\" onClick={onClose}>\n            <X className=\"h-5 w-5\" />\n            <span className=\"sr-only\">Cerrar menú</span>\n          </Button>\n        </div>\n\n        <div className=\"space-y-4 py-4\">\n          <div className=\"px-3 py-2\">\n            <div className=\"space-y-1\">\n              {navLinks.map((link) => (\n                <NavItem\n                  key={link.href}\n                  href={link.href}\n                  icon={link.icon}\n                  label={link.label}\n                  isActive={pathname === link.href}\n                />\n              ))}\n              <button\n                onClick={() => logout()}\n                className=\"flex w-full items-center gap-3 rounded-lg px-3 py-2 text-sm text-muted-foreground transition-all hover:bg-destructive/10 hover:text-destructive\"\n              >\n                <LogOut className=\"h-4 w-4\" />\n                Cerrar Sesión\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <TopBar onMenuClick={() => setShowMobileMenu(true)} />\n      <Sidebar />\n      <MobileNav open={showMobileMenu} onClose={() => setShowMobileMenu(false)} />\n    </>\n  )\n}\n"
        }
    ]
}