{
    "sourceFile": "frontend/components/navigation/user-menu.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1741317516445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741317536883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+\"use client\"\r\n+\r\n+import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\n+import {\r\n+  DropdownMenu,\r\n+  DropdownMenuContent,\r\n+  DropdownMenuItem,\r\n+  DropdownMenuLabel,\r\n+  DropdownMenuSeparator,\r\n+  DropdownMenuTrigger,\r\n+} from \"@/components/ui/dropdown-menu\"\r\n+import { Button } from \"@/components/ui/button\"\r\n+import { User, LogOut, LayoutDashboard, Settings } from \"lucide-react\"\r\n+import { useAuth } from \"@/hooks/use-auth\"\r\n+import { useRouter } from \"next/navigation\"\r\n+import { ROUTES } from \"@/lib/constants/routes\"\r\n+import { LANDING_TEXT } from \"@/lib/constants/ui-text\"\r\n+import { UI_CONFIG } from \"@/lib/constants/app-config\"\r\n+\r\n+export function UserMenu() {\r\n+  const { user, logout, navigateToDashboard } = useAuth()\r\n+  const router = useRouter()\r\n+\r\n+  if (!user) return null\r\n+\r\n+  const getInitials = (name: string) => {\r\n+    return name\r\n+      .split(\" \")\r\n+      .map((part) => part[0])\r\n+      .join(\"\")\r\n+      .toUpperCase()\r\n+      .substring(0, UI_CONFIG.avatarFallbackChars)\r\n+  }\r\n+\r\n+  const handleProfile = () => {\r\n+    router.push(ROUTES.PROFILE)\r\n+  }\r\n+\r\n+  // Mejorar la función de logout para asegurar que funcione correctamente\r\n+  const handleLogout = () => {\r\n+    // Llamar a la función logout del hook useAuth\r\n+    logout()\r\n+  }\r\n+\r\n+  return (\r\n+    <DropdownMenu>\r\n+      <DropdownMenuTrigger asChild>\r\n+        <Button variant=\"ghost\" size=\"icon\" className=\"relative h-8 w-8 rounded-full\">\r\n+          <Avatar className=\"h-8 w-8\">\r\n+            <AvatarImage src={user.avatar || \"/placeholder.svg\"} alt={user.fullName} />\r\n+            <AvatarFallback className=\"bg-primary/20 text-primary\">{getInitials(user.fullName)}</AvatarFallback>\r\n+          </Avatar>\r\n+        </Button>\r\n+      </DropdownMenuTrigger>\r\n+      <DropdownMenuContent className=\"w-56\" align=\"end\">\r\n+        <DropdownMenuLabel className=\"font-normal\">\r\n+          <div className=\"flex flex-col space-y-1\">\r\n+            <p className=\"text-sm font-medium leading-none\">{user.fullName}</p>\r\n+            <p className=\"text-xs text-muted-foreground capitalize\">{user.role}</p>\r\n+          </div>\r\n+        </DropdownMenuLabel>\r\n+        <DropdownMenuSeparator />\r\n+        <DropdownMenuItem onClick={handleProfile}>\r\n+          <User className=\"mr-2 h-4 w-4\" />\r\n+          <span>{LANDING_TEXT.userMenu.profile}</span>\r\n+        </DropdownMenuItem>\r\n+        <DropdownMenuItem onClick={navigateToDashboard}>\r\n+          <LayoutDashboard className=\"mr-2 h-4 w-4\" />\r\n+          <span>{LANDING_TEXT.userMenu.dashboard}</span>\r\n+        </DropdownMenuItem>\r\n+        <DropdownMenuItem>\r\n+          <Settings className=\"mr-2 h-4 w-4\" />\r\n+          <span>{LANDING_TEXT.userMenu.settings}</span>\r\n+        </DropdownMenuItem>\r\n+        <DropdownMenuSeparator />\r\n+        {/* Modificar el DropdownMenuItem para usar handleLogout */}\r\n+        <DropdownMenuItem onClick={handleLogout}>\r\n+          <LogOut className=\"mr-2 h-4 w-4\" />\r\n+          <span>{LANDING_TEXT.userMenu.logout}</span>\r\n+        </DropdownMenuItem>\r\n+      </DropdownMenuContent>\r\n+    </DropdownMenu>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1741320448261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,84 +1,90 @@\n \"use client\"\r\n \r\n-import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\n-import {\r\n-  DropdownMenu,\r\n-  DropdownMenuContent,\r\n-  DropdownMenuItem,\r\n-  DropdownMenuLabel,\r\n-  DropdownMenuSeparator,\r\n-  DropdownMenuTrigger,\r\n-} from \"@/components/ui/dropdown-menu\"\r\n+import { Sheet, SheetContent } from \"@/components/ui/sheet\"\r\n import { Button } from \"@/components/ui/button\"\r\n-import { User, LogOut, LayoutDashboard, Settings } from \"lucide-react\"\r\n+import { ScrollArea } from \"@/components/ui/scroll-area\"\r\n+import { useNavigationStore } from \"@/lib/streams/landing.stream\"\r\n+import { LANDING_CONFIG } from \"@/lib/config/landing.config\"\r\n+import { useRouter } from \"next/navigation\"\r\n import { useAuth } from \"@/hooks/use-auth\"\r\n-import { useRouter } from \"next/navigation\"\r\n-import { ROUTES } from \"@/lib/constants/routes\"\r\n-import { LANDING_TEXT } from \"@/lib/constants/ui-text\"\r\n-import { UI_CONFIG } from \"@/lib/constants/app-config\"\r\n+import { LogOut } from \"lucide-react\"\r\n \r\n-export function UserMenu() {\r\n-  const { user, logout, navigateToDashboard } = useAuth()\r\n+// Modificar la función MobileNav para asegurar que los botones aparezcan correctamente después del logout\r\n+export function MobileNav() {\r\n+  const { isNavOpen, setNavOpen } = useNavigationStore()\r\n   const router = useRouter()\r\n+  const { user, isAuthenticated, logout } = useAuth()\r\n \r\n-  if (!user) return null\r\n-\r\n-  const getInitials = (name: string) => {\r\n-    return name\r\n-      .split(\" \")\r\n-      .map((part) => part[0])\r\n-      .join(\"\")\r\n-      .toUpperCase()\r\n-      .substring(0, UI_CONFIG.avatarFallbackChars)\r\n+  const handleClose = () => {\r\n+    setNavOpen(false)\r\n   }\r\n \r\n-  const handleProfile = () => {\r\n-    router.push(ROUTES.PROFILE)\r\n-  }\r\n-\r\n-  // Mejorar la función de logout para asegurar que funcione correctamente\r\n   const handleLogout = () => {\r\n-    // Llamar a la función logout del hook useAuth\r\n     logout()\r\n+    handleClose()\r\n   }\r\n \r\n   return (\r\n-    <DropdownMenu>\r\n-      <DropdownMenuTrigger asChild>\r\n-        <Button variant=\"ghost\" size=\"icon\" className=\"relative h-8 w-8 rounded-full\">\r\n-          <Avatar className=\"h-8 w-8\">\r\n-            <AvatarImage src={user.avatar || \"/placeholder.svg\"} alt={user.fullName} />\r\n-            <AvatarFallback className=\"bg-primary/20 text-primary\">{getInitials(user.fullName)}</AvatarFallback>\r\n-          </Avatar>\r\n-        </Button>\r\n-      </DropdownMenuTrigger>\r\n-      <DropdownMenuContent className=\"w-56\" align=\"end\">\r\n-        <DropdownMenuLabel className=\"font-normal\">\r\n-          <div className=\"flex flex-col space-y-1\">\r\n-            <p className=\"text-sm font-medium leading-none\">{user.fullName}</p>\r\n-            <p className=\"text-xs text-muted-foreground capitalize\">{user.role}</p>\r\n+    <Sheet open={isNavOpen} onOpenChange={setNavOpen}>\r\n+      <SheetContent\r\n+        side=\"left\"\r\n+        className=\"w-72 border-primary/20 bg-background/95 backdrop-blur-xl p-4 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\"\r\n+      >\r\n+        <h2 className=\"text-lg font-semibold mb-4\">Menú</h2>\r\n+        <ScrollArea className=\"h-[calc(100vh-8rem)] pb-10\">\r\n+          <div className=\"flex flex-col gap-4\">\r\n+            <div className=\"space-y-2\">\r\n+              {LANDING_CONFIG.navigation.items.map((item) => (\r\n+                <Button\r\n+                  key={item.href}\r\n+                  variant=\"ghost\"\r\n+                  className=\"w-full justify-start\"\r\n+                  onClick={() => {\r\n+                    handleClose()\r\n+                    const element = document.querySelector(item.href)\r\n+                    if (element) {\r\n+                      element.scrollIntoView({ behavior: \"smooth\" })\r\n+                    }\r\n+                  }}\r\n+                >\r\n+                  {item.label}\r\n+                </Button>\r\n+              ))}\r\n+            </div>\r\n+            <div className=\"flex flex-col gap-2 pt-4\">\r\n+              {isAuthenticated ? (\r\n+                <Button className=\"w-full btn-magenta flex items-center gap-2\" onClick={handleLogout}>\r\n+                  <LogOut className=\"h-4 w-4\" />\r\n+                  Cerrar sesión\r\n+                </Button>\r\n+              ) : (\r\n+                <>\r\n+                  <Button\r\n+                    className=\"w-full btn-magenta\"\r\n+                    onClick={() => {\r\n+                      handleClose()\r\n+                      router.push(\"/login\")\r\n+                    }}\r\n+                  >\r\n+                    Iniciar sesión\r\n+                  </Button>\r\n+                  <Button\r\n+                    variant=\"outline\"\r\n+                    className=\"w-full btn-gradient-border\"\r\n+                    onClick={() => {\r\n+                      handleClose()\r\n+                      router.push(\"/register\")\r\n+                    }}\r\n+                  >\r\n+                    Registrarse\r\n+                  </Button>\r\n+                </>\r\n+              )}\r\n+            </div>\r\n           </div>\r\n-        </DropdownMenuLabel>\r\n-        <DropdownMenuSeparator />\r\n-        <DropdownMenuItem onClick={handleProfile}>\r\n-          <User className=\"mr-2 h-4 w-4\" />\r\n-          <span>{LANDING_TEXT.userMenu.profile}</span>\r\n-        </DropdownMenuItem>\r\n-        <DropdownMenuItem onClick={navigateToDashboard}>\r\n-          <LayoutDashboard className=\"mr-2 h-4 w-4\" />\r\n-          <span>{LANDING_TEXT.userMenu.dashboard}</span>\r\n-        </DropdownMenuItem>\r\n-        <DropdownMenuItem>\r\n-          <Settings className=\"mr-2 h-4 w-4\" />\r\n-          <span>{LANDING_TEXT.userMenu.settings}</span>\r\n-        </DropdownMenuItem>\r\n-        <DropdownMenuSeparator />\r\n-        {/* Modificar el DropdownMenuItem para usar handleLogout */}\r\n-        <DropdownMenuItem onClick={handleLogout}>\r\n-          <LogOut className=\"mr-2 h-4 w-4\" />\r\n-          <span>{LANDING_TEXT.userMenu.logout}</span>\r\n-        </DropdownMenuItem>\r\n-      </DropdownMenuContent>\r\n-    </DropdownMenu>\r\n+        </ScrollArea>\r\n+      </SheetContent>\r\n+    </Sheet>\r\n   )\r\n }\r\n+\r\n"
                },
                {
                    "date": 1741320461271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,90 +1,85 @@\n \"use client\"\r\n \r\n-import { Sheet, SheetContent } from \"@/components/ui/sheet\"\r\n+import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\n+import {\r\n+  DropdownMenu,\r\n+  DropdownMenuContent,\r\n+  DropdownMenuItem,\r\n+  DropdownMenuLabel,\r\n+  DropdownMenuSeparator,\r\n+  DropdownMenuTrigger,\r\n+} from \"@/components/ui/dropdown-menu\"\r\n import { Button } from \"@/components/ui/button\"\r\n-import { ScrollArea } from \"@/components/ui/scroll-area\"\r\n-import { useNavigationStore } from \"@/lib/streams/landing.stream\"\r\n-import { LANDING_CONFIG } from \"@/lib/config/landing.config\"\r\n+import { User, LogOut, LayoutDashboard, Settings } from \"lucide-react\"\r\n+import { useAuth } from \"@/hooks/use-auth\"\r\n import { useRouter } from \"next/navigation\"\r\n-import { useAuth } from \"@/hooks/use-auth\"\r\n-import { LogOut } from \"lucide-react\"\r\n+import { ROUTES } from \"@/lib/constants/routes\"\r\n+import { LANDING_TEXT } from \"@/lib/constants/ui-text\"\r\n+import { UI_CONFIG } from \"@/lib/constants/app-config\"\r\n \r\n-// Modificar la función MobileNav para asegurar que los botones aparezcan correctamente después del logout\r\n-export function MobileNav() {\r\n-  const { isNavOpen, setNavOpen } = useNavigationStore()\r\n+export function UserMenu() {\r\n+  const { user, logout, navigateToDashboard } = useAuth()\r\n   const router = useRouter()\r\n-  const { user, isAuthenticated, logout } = useAuth()\r\n \r\n-  const handleClose = () => {\r\n-    setNavOpen(false)\r\n+  if (!user) return null\r\n+\r\n+  const getInitials = (name: string) => {\r\n+    return name\r\n+      .split(\" \")\r\n+      .map((part) => part[0])\r\n+      .join(\"\")\r\n+      .toUpperCase()\r\n+      .substring(0, UI_CONFIG.avatarFallbackChars)\r\n   }\r\n \r\n+  const handleProfile = () => {\r\n+    router.push(ROUTES.PROFILE)\r\n+  }\r\n+\r\n+  // Mejorar la función de logout para asegurar que funcione correctamente\r\n   const handleLogout = () => {\r\n+    // Llamar a la función logout del hook useAuth\r\n     logout()\r\n-    handleClose()\r\n   }\r\n \r\n   return (\r\n-    <Sheet open={isNavOpen} onOpenChange={setNavOpen}>\r\n-      <SheetContent\r\n-        side=\"left\"\r\n-        className=\"w-72 border-primary/20 bg-background/95 backdrop-blur-xl p-4 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\"\r\n-      >\r\n-        <h2 className=\"text-lg font-semibold mb-4\">Menú</h2>\r\n-        <ScrollArea className=\"h-[calc(100vh-8rem)] pb-10\">\r\n-          <div className=\"flex flex-col gap-4\">\r\n-            <div className=\"space-y-2\">\r\n-              {LANDING_CONFIG.navigation.items.map((item) => (\r\n-                <Button\r\n-                  key={item.href}\r\n-                  variant=\"ghost\"\r\n-                  className=\"w-full justify-start\"\r\n-                  onClick={() => {\r\n-                    handleClose()\r\n-                    const element = document.querySelector(item.href)\r\n-                    if (element) {\r\n-                      element.scrollIntoView({ behavior: \"smooth\" })\r\n-                    }\r\n-                  }}\r\n-                >\r\n-                  {item.label}\r\n-                </Button>\r\n-              ))}\r\n-            </div>\r\n-            <div className=\"flex flex-col gap-2 pt-4\">\r\n-              {isAuthenticated ? (\r\n-                <Button className=\"w-full btn-magenta flex items-center gap-2\" onClick={handleLogout}>\r\n-                  <LogOut className=\"h-4 w-4\" />\r\n-                  Cerrar sesión\r\n-                </Button>\r\n-              ) : (\r\n-                <>\r\n-                  <Button\r\n-                    className=\"w-full btn-magenta\"\r\n-                    onClick={() => {\r\n-                      handleClose()\r\n-                      router.push(\"/login\")\r\n-                    }}\r\n-                  >\r\n-                    Iniciar sesión\r\n-                  </Button>\r\n-                  <Button\r\n-                    variant=\"outline\"\r\n-                    className=\"w-full btn-gradient-border\"\r\n-                    onClick={() => {\r\n-                      handleClose()\r\n-                      router.push(\"/register\")\r\n-                    }}\r\n-                  >\r\n-                    Registrarse\r\n-                  </Button>\r\n-                </>\r\n-              )}\r\n-            </div>\r\n+    <DropdownMenu>\r\n+      <DropdownMenuTrigger asChild>\r\n+        <Button variant=\"ghost\" size=\"icon\" className=\"relative h-8 w-8 rounded-full\">\r\n+          <Avatar className=\"h-8 w-8\">\r\n+            <AvatarImage src={user.avatar || \"/placeholder.svg\"} alt={user.fullName} />\r\n+            <AvatarFallback className=\"bg-primary/20 text-primary\">{getInitials(user.fullName)}</AvatarFallback>\r\n+          </Avatar>\r\n+        </Button>\r\n+      </DropdownMenuTrigger>\r\n+      <DropdownMenuContent className=\"w-56\" align=\"end\">\r\n+        <DropdownMenuLabel className=\"font-normal\">\r\n+          <div className=\"flex flex-col space-y-1\">\r\n+            <p className=\"text-sm font-medium leading-none\">{user.fullName}</p>\r\n+            <p className=\"text-xs text-muted-foreground capitalize\">{user.role}</p>\r\n           </div>\r\n-        </ScrollArea>\r\n-      </SheetContent>\r\n-    </Sheet>\r\n+        </DropdownMenuLabel>\r\n+        <DropdownMenuSeparator />\r\n+        <DropdownMenuItem onClick={handleProfile}>\r\n+          <User className=\"mr-2 h-4 w-4\" />\r\n+          <span>{LANDING_TEXT.userMenu.profile}</span>\r\n+        </DropdownMenuItem>\r\n+        <DropdownMenuItem onClick={navigateToDashboard}>\r\n+          <LayoutDashboard className=\"mr-2 h-4 w-4\" />\r\n+          <span>{LANDING_TEXT.userMenu.dashboard}</span>\r\n+        </DropdownMenuItem>\r\n+        <DropdownMenuItem>\r\n+          <Settings className=\"mr-2 h-4 w-4\" />\r\n+          <span>{LANDING_TEXT.userMenu.settings}</span>\r\n+        </DropdownMenuItem>\r\n+        <DropdownMenuSeparator />\r\n+        {/* Modificar el DropdownMenuItem para usar handleLogout */}\r\n+        <DropdownMenuItem onClick={handleLogout}>\r\n+          <LogOut className=\"mr-2 h-4 w-4\" />\r\n+          <span>{LANDING_TEXT.userMenu.logout}</span>\r\n+        </DropdownMenuItem>\r\n+      </DropdownMenuContent>\r\n+    </DropdownMenu>\r\n   )\r\n }\r\n \r\n"
                }
            ],
            "date": 1741317516445,
            "name": "Commit-0",
            "content": ""
        }
    ]
}