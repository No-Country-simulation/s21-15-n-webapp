{
    "sourceFile": "frontend/components/navigation/header.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1740970765203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740970781283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n \"use client\"\r\n \r\n-import { useEffect, useRef } from \"react\"\r\n+import { useEffect, useRef,  } from \"react\"\r\n import { Button } from \"@/components/ui/button\"\r\n import { Menu, X, Sparkles } from \"lucide-react\"\r\n import Link from \"next/link\"\r\n-import { memo } from \"react\"\r\n+import {  } from \"react\"\r\n import { useNavigation } from \"@/hooks/use-navigation\"\r\n import { useMobileMenu } from \"@/hooks/use-mobile-menu\"\r\n import { useActiveSection } from \"@/hooks/use-active-section\"\r\n import { MobileMenuOverlay } from \"../layout/mobile-menu-overlay\"\r\n@@ -150,5 +150,4 @@\n       </MobileMenuOverlay>\r\n     </>\r\n   )\r\n })\r\n-\r\n"
                },
                {
                    "date": 1740970789980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import { useEffect, useRef, memo } from \"react\"\r\n import { Button } from \"@/components/ui/button\"\r\n import { Menu, X, Sparkles } from \"lucide-react\"\r\n import Link from \"next/link\"\r\n-import {  } from \"react\"\r\n import { useNavigation } from \"@/hooks/use-navigation\"\r\n import { useMobileMenu } from \"@/hooks/use-mobile-menu\"\r\n import { useActiveSection } from \"@/hooks/use-active-section\"\r\n import { MobileMenuOverlay } from \"../layout/mobile-menu-overlay\"\r\n"
                },
                {
                    "date": 1740974387264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n import { useNavigation } from \"@/hooks/use-navigation\"\r\n import { useMobileMenu } from \"@/hooks/use-mobile-menu\"\r\n import { useActiveSection } from \"@/hooks/use-active-section\"\r\n import { MobileMenuOverlay } from \"../layout/mobile-menu-overlay\"\r\n-import { cn } from \"@/lib/utils\"\r\n+import { cn } from \"@/lib/utils/utils\"\r\n import { createPortal } from \"react-dom\"\r\n \r\n const navigationItems = [\r\n   { label: \"Inicio\", href: \"hero\" },\r\n"
                }
            ],
            "date": 1740970765203,
            "name": "Commit-0",
            "content": "\"use client\"\r\n\r\nimport { useEffect, useRef } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Menu, X, Sparkles } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport { memo } from \"react\"\r\nimport { useNavigation } from \"@/hooks/use-navigation\"\r\nimport { useMobileMenu } from \"@/hooks/use-mobile-menu\"\r\nimport { useActiveSection } from \"@/hooks/use-active-section\"\r\nimport { MobileMenuOverlay } from \"../layout/mobile-menu-overlay\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { createPortal } from \"react-dom\"\r\n\r\nconst navigationItems = [\r\n  { label: \"Inicio\", href: \"hero\" },\r\n  { label: \"Cómo funciona\", href: \"como-funciona\" },\r\n  { label: \"Beneficios\", href: \"beneficios\" },\r\n  { label: \"Ranking\", href: \"ranking\" },\r\n  { label: \"Testimonios\", href: \"testimonios\" },\r\n  { label: \"Preguntas Frecuentes\", href: \"faq\" },\r\n]\r\n\r\nexport const Header = memo(function Header() {\r\n  const headerRef = useRef<HTMLElement>(null)\r\n  const { isOpen, toggle } = useMobileMenu()\r\n  const { navigateToSection, navigateToPage } = useNavigation()\r\n  const activeSection = useActiveSection()\r\n\r\n  const handleNavigationClick = (href: string) => {\r\n    toggle()\r\n    navigateToSection(href)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const headerElement = headerRef.current\r\n    const headerPortal = document.getElementById(\"app-header\")\r\n\r\n    if (headerElement && headerPortal) {\r\n      return () => {}\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {/* Renderizamos el header en un portal para mantenerlo sobre el blur */}\r\n      {createPortal(\r\n        <header\r\n          ref={headerRef}\r\n          className=\"fixed top-0 w-full border-b border-primary/10 bg-background/80 backdrop-blur-sm z-40\"\r\n        >\r\n          <div className=\"container flex h-16 items-center justify-between px-4\">\r\n            {/* Logo */}\r\n            <Button variant=\"ghost\" size=\"icon\" className=\"lg:hidden text-white hover:bg-primary/20\" onClick={toggle}>\r\n              {isOpen ? (\r\n                <X className=\"h-6 w-6 transition-transform duration-200\" />\r\n              ) : (\r\n                <Menu className=\"h-6 w-6 transition-transform duration-200\" />\r\n              )}\r\n              <span className=\"sr-only\">Toggle menu</span>\r\n            </Button>\r\n\r\n            <Link href=\"/\" className=\"flex items-center gap-2\">\r\n              <div className=\"flex h-8 w-8 items-center justify-center rounded bg-primary/20\">\r\n                <Sparkles className=\"h-4 w-4 text-primary\" />\r\n              </div>\r\n              <span className=\"text-lg font-semibold text-white\">StartPerks</span>\r\n            </Link>\r\n\r\n            {/* Desktop Navigation */}\r\n            <nav className=\"hidden items-center gap-8 lg:flex\">\r\n              {navigationItems.map((item) => (\r\n                <button\r\n                  key={item.href}\r\n                  onClick={() => handleNavigationClick(item.href)}\r\n                  className={cn(\r\n                    \"nav-link text-sm transition-all duration-300\",\r\n                    activeSection === item.href ? \"active text-primary\" : \"text-gray-400 hover:text-primary\",\r\n                  )}\r\n                >\r\n                  {item.label}\r\n                </button>\r\n              ))}\r\n            </nav>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"hidden lg:flex lg:gap-4\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  className=\"border-primary/20 text-white hover:bg-primary/20\"\r\n                  onClick={() => navigateToPage(\"/register\")}\r\n                >\r\n                  Registrarse\r\n                </Button>\r\n                <Button className=\"bg-primary text-white hover:bg-primary/90\" onClick={() => navigateToPage(\"/login\")}>\r\n                  Iniciar sesión\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>,\r\n        document.getElementById(\"app-header\") || document.body,\r\n      )}\r\n\r\n      <MobileMenuOverlay isOpen={isOpen}>\r\n        <nav className=\"fixed inset-y-0 left-0 w-72 bg-background border-r border-primary/20 z-40\">\r\n          <div className=\"flex flex-col h-full\">\r\n            <div className=\"flex items-center justify-between h-16 px-4 border-b border-primary/20\">\r\n              <span className=\"text-lg font-semibold\">Menú</span>\r\n              <Button variant=\"ghost\" size=\"icon\" onClick={toggle}>\r\n                <X className=\"h-5 w-5\" />\r\n                <span className=\"sr-only\">Cerrar menú</span>\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"flex-1 overflow-y-auto py-4\">\r\n              {navigationItems.map((item) => (\r\n                <button\r\n                  key={item.href}\r\n                  onClick={() => handleNavigationClick(item.href)}\r\n                  className={cn(\r\n                    \"w-full px-4 py-2 text-left text-sm transition-colors\",\r\n                    activeSection === item.href\r\n                      ? \"bg-primary/20 text-primary\"\r\n                      : \"text-gray-400 hover:bg-primary/10 hover:text-primary\",\r\n                  )}\r\n                >\r\n                  {item.label}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"p-4 border-t border-primary/20\">\r\n              <div className=\"grid gap-2\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  className=\"w-full border-primary/20\"\r\n                  onClick={() => navigateToPage(\"/register\")}\r\n                >\r\n                  Registrarse\r\n                </Button>\r\n                <Button className=\"w-full\" onClick={() => navigateToPage(\"/login\")}>\r\n                  Iniciar sesión\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </MobileMenuOverlay>\r\n    </>\r\n  )\r\n})\r\n\r\n"
        }
    ]
}